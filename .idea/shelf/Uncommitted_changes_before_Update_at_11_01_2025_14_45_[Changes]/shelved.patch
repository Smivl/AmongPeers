Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\r\n  <modelVersion>4.0.0</modelVersion>\r\n  <groupId>dk.dtu</groupId>\r\n  <artifactId>amongpeers</artifactId>\r\n  <version>1.0-SNAPSHOT</version>\r\n  <properties>\r\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n    <maven.compiler.source>21</maven.compiler.source>\r\n    <maven.compiler.target>21</maven.compiler.target>\r\n  </properties>\r\n  <dependencies>\r\n    <dependency>\r\n      <groupId>junit</groupId>\r\n      <artifactId>junit</artifactId>\r\n      <version>3.8.1</version>\r\n      <scope>test</scope>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.openjfx</groupId>\r\n      <artifactId>javafx-controls</artifactId>\r\n      <version>21</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.openjfx</groupId>\r\n      <artifactId>javafx-fxml</artifactId>\r\n      <version>21</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>io.github.pspaces.jspace</groupId>\r\n      <artifactId>common</artifactId>\r\n      <version>[0.0,)</version>\r\n    </dependency>\r\n  </dependencies>\r\n  <build>\r\n    <plugins>\r\n      <plugin>\r\n        <groupId>org.apache.maven.plugins</groupId>\r\n        <artifactId>maven-compiler-plugin</artifactId>\r\n        <version>3.8.0</version>\r\n        <configuration>\r\n          <release>11</release>\r\n        </configuration>\r\n      </plugin>\r\n      <plugin>\r\n        <groupId>org.openjfx</groupId>\r\n        <artifactId>javafx-maven-plugin</artifactId>\r\n        <version>0.0.6</version>\r\n        <executions>\r\n          <execution>\r\n            <id>default-cli</id>\r\n            <configuration>\r\n              <mainClass>TestJSpaceFX</mainClass>\r\n            </configuration>\r\n          </execution>\r\n        </executions>\r\n      </plugin>\r\n    </plugins>\r\n  </build>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision c657429101a442ce09b46e1a37ec2733e4700cc7)
+++ b/pom.xml	(date 1736509984962)
@@ -50,7 +50,7 @@
           <execution>
             <id>default-cli</id>
             <configuration>
-              <mainClass>TestJSpaceFX</mainClass>
+              <mainClass>Main</mainClass>
             </configuration>
           </execution>
         </executions>
Index: src/main/java/Map/MapView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Map/MapView.java b/src/main/java/Map/MapView.java
new file mode 100644
--- /dev/null	(date 1736603119941)
+++ b/src/main/java/Map/MapView.java	(date 1736603119941)
@@ -0,0 +1,32 @@
+package Map;
+
+import PlayerMine.PlayerView;
+import javafx.scene.Scene;
+import javafx.scene.image.Image;
+import javafx.scene.image.ImageView;
+import javafx.scene.layout.Pane;
+
+public class MapView extends Pane {
+
+    private ImageView mapImage;
+
+    private Scene scene;
+
+    public MapView(Scene scene){
+        super();
+
+        this.scene = scene;
+
+        this.mapImage = new ImageView(new Image("map.png"));
+        this.getChildren().add(mapImage);
+    }
+
+    public void render(PlayerView player){
+        double offsetX = (scene.getWidth()/2) - player.getCenterX();
+        double offsetY = (scene.getHeight()/2) - player.getCenterY();
+
+        this.setTranslateX(offsetX);
+        this.setTranslateY(offsetY);
+    }
+
+}
Index: src/main/java/TTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/TTest.java b/src/main/java/TTest.java
new file mode 100644
--- /dev/null	(date 1736541778105)
+++ b/src/main/java/TTest.java	(date 1736541778105)
@@ -0,0 +1,17 @@
+import javafx.scene.paint.Color;
+import org.jspace.*;
+
+public class TTest {
+    public static void main(String[] args){
+        SequentialSpace space = new SequentialSpace();
+
+        try{
+            space.put(new Color(1,1,1,1));
+            Object[] o = space.get(new FormalField(Color.class));
+
+            System.out.println(((Color) o[0]).toString());
+        }catch (Exception e){
+            System.out.println(e.getMessage());
+        }
+    }
+}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"20e64abb-9b4e-4189-a5ca-643a67bdae90\" name=\"Changes\" comment=\"Initialization\">\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/uiDesigner.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/Fake.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/pom.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/pom.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/dk/dtu/App.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/dk/dtu/TestJSpace.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/dk/dtu/TestJSpaceFX.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/TestJSpaceFX.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.TestJSpace.executor\": \"Run\",\r\n    \"Application.TestJSpaceFX.executor\": \"Run\",\r\n    \"JUnit.AppTest.executor\": \"Run\",\r\n    \"Maven. [org.apache.maven.plugins:maven-archetype-plugin:RELEASE:generate].executor\": \"Run\",\r\n    \"Maven.amongpeers [javafx:run].executor\": \"Run\",\r\n    \"Maven.amongpeers [org.openjfx:javafx-maven-plugin:0.0.6:run].executor\": \"Run\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"git-widget-placeholder\": \"master\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"settings.editor.selected.configurable\": \"project.propVCSSupport.Mappings\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Maven.amongpeers [javafx:run]\">\r\n    <configuration name=\"TestJSpace\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"dk.dtu.TestJSpace\" />\r\n      <module name=\"amongpeers\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\".*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"TestJSpaceFX\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"TestJSpaceFX\" />\r\n      <module name=\"amongpeers\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\".*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"AppTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"amongpeers\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\".*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"dk.dtu\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"dk.dtu.AppTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"amongpeers [javafx:run]\" type=\"MavenRunConfiguration\" factoryName=\"Maven\" temporary=\"true\">\r\n      <MavenSettings>\r\n        <option name=\"myGeneralSettings\" />\r\n        <option name=\"myRunnerSettings\" />\r\n        <option name=\"myRunnerParameters\">\r\n          <MavenRunnerParameters>\r\n            <option name=\"cmdOptions\" />\r\n            <option name=\"profiles\">\r\n              <set />\r\n            </option>\r\n            <option name=\"goals\">\r\n              <list>\r\n                <option value=\"javafx:run\" />\r\n              </list>\r\n            </option>\r\n            <option name=\"multimoduleDir\" />\r\n            <option name=\"pomFileName\" value=\"pom.xml\" />\r\n            <option name=\"profilesMap\">\r\n              <map />\r\n            </option>\r\n            <option name=\"projectsCmdOptionValues\">\r\n              <list />\r\n            </option>\r\n            <option name=\"resolveToWorkspace\" value=\"false\" />\r\n            <option name=\"workingDirPath\" value=\"$PROJECT_DIR$\" />\r\n          </MavenRunnerParameters>\r\n        </option>\r\n      </MavenSettings>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Maven.amongpeers [javafx:run]\" />\r\n        <item itemvalue=\"JUnit.AppTest\" />\r\n        <item itemvalue=\"Application.TestJSpaceFX\" />\r\n        <item itemvalue=\"Application.TestJSpace\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-21.0.2-openjdk-21.0.2-4caba194b151-322ed176\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"20e64abb-9b4e-4189-a5ca-643a67bdae90\" name=\"Changes\" comment=\"\" />\r\n      <created>1736424873032</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1736424873032</updated>\r\n      <workItem from=\"1736424874512\" duration=\"5990000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Initialization\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1736425481182</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1736425481182</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Initialization\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1736426210845</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1736426210845</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Initialization\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Initialization\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision c657429101a442ce09b46e1a37ec2733e4700cc7)
+++ b/.idea/workspace.xml	(date 1736602960906)
@@ -4,14 +4,18 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="20e64abb-9b4e-4189-a5ca-643a67bdae90" name="Changes" comment="Initialization">
-      <change afterPath="$PROJECT_DIR$/.idea/uiDesigner.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/Fake.java" afterDir="false" />
+    <list default="true" id="9d2fb1cc-b2f6-4720-b502-1cc14e9c0feb" name="Changes" comment="">
+      <change afterPath="$PROJECT_DIR$/src/main/java/Main.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/Map/Map.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/Map/MapView.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/Player/Player.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/Player/PlayerView.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/TTest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/map.png" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/dk/dtu/App.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/dk/dtu/TestJSpace.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/dk/dtu/TestJSpaceFX.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/TestJSpaceFX.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -31,48 +35,43 @@
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
   </component>
-  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
+  <component name="ProjectColorInfo">{
+  &quot;customColor&quot;: &quot;&quot;,
+  &quot;associatedIndex&quot;: 1
+}</component>
+  <component name="ProjectId" id="2rQz5aHurlytJenrarQsMxWXU7o" />
+  <component name="ProjectLevelVcsManager">
+    <ConfirmationsSetting value="2" id="Add" />
+  </component>
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "Application.TestJSpace.executor": "Run",
-    "Application.TestJSpaceFX.executor": "Run",
-    "JUnit.AppTest.executor": "Run",
-    "Maven. [org.apache.maven.plugins:maven-archetype-plugin:RELEASE:generate].executor": "Run",
-    "Maven.amongpeers [javafx:run].executor": "Run",
-    "Maven.amongpeers [org.openjfx:javafx-maven-plugin:0.0.6:run].executor": "Run",
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "git-widget-placeholder": "master",
-    "kotlin-language-version-configured": "true",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "nodejs_package_manager_path": "npm",
-    "settings.editor.selected.configurable": "project.propVCSSupport.Mappings",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
+    &quot;Application.TTest.executor&quot;: &quot;Run&quot;,
+    &quot;Application.TestJSpaceFX.executor&quot;: &quot;Run&quot;,
+    &quot;Maven.amongpeers [javafx:run].executor&quot;: &quot;Run&quot;,
+    &quot;Maven.amongpeers [org.openjfx:javafx-maven-plugin:0.0.6:run].executor&quot;: &quot;Run&quot;,
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
+    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
+    &quot;last_opened_file_path&quot;: &quot;D:/projects&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;build.tools&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
-  <component name="RecentsManager">
-    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
-      <recent name="" />
-    </key>
-  </component>
+}</component>
   <component name="RunManager" selected="Maven.amongpeers [javafx:run]">
-    <configuration name="TestJSpace" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="dk.dtu.TestJSpace" />
+    <configuration name="TTest" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="TTest" />
       <module name="amongpeers" />
-      <extension name="coverage">
-        <pattern>
-          <option name="PATTERN" value=".*" />
-          <option name="ENABLED" value="true" />
-        </pattern>
-      </extension>
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
@@ -80,27 +79,6 @@
     <configuration name="TestJSpaceFX" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="TestJSpaceFX" />
       <module name="amongpeers" />
-      <extension name="coverage">
-        <pattern>
-          <option name="PATTERN" value=".*" />
-          <option name="ENABLED" value="true" />
-        </pattern>
-      </extension>
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
-    <configuration name="AppTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
-      <module name="amongpeers" />
-      <extension name="coverage">
-        <pattern>
-          <option name="PATTERN" value=".*" />
-          <option name="ENABLED" value="true" />
-        </pattern>
-      </extension>
-      <option name="PACKAGE_NAME" value="dk.dtu" />
-      <option name="MAIN_CLASS_NAME" value="dk.dtu.AppTest" />
-      <option name="TEST_OBJECT" value="class" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
@@ -138,53 +116,38 @@
     <recent_temporary>
       <list>
         <item itemvalue="Maven.amongpeers [javafx:run]" />
-        <item itemvalue="JUnit.AppTest" />
+        <item itemvalue="Application.TTest" />
         <item itemvalue="Application.TestJSpaceFX" />
-        <item itemvalue="Application.TestJSpace" />
       </list>
     </recent_temporary>
   </component>
   <component name="SharedIndexes">
     <attachedChunks>
       <set>
-        <option value="jdk-21.0.2-openjdk-21.0.2-4caba194b151-322ed176" />
+        <option value="jdk-21.0.2-openjdk-21.0.2-4caba194b151-4f524021" />
       </set>
     </attachedChunks>
   </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
-      <changelist id="20e64abb-9b4e-4189-a5ca-643a67bdae90" name="Changes" comment="" />
-      <created>1736424873032</created>
+      <changelist id="9d2fb1cc-b2f6-4720-b502-1cc14e9c0feb" name="Changes" comment="" />
+      <created>1736505905092</created>
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
-      <updated>1736424873032</updated>
-      <workItem from="1736424874512" duration="5990000" />
-    </task>
-    <task id="LOCAL-00001" summary="Initialization">
-      <option name="closed" value="true" />
-      <created>1736425481182</created>
-      <option name="number" value="00001" />
-      <option name="presentableId" value="LOCAL-00001" />
-      <option name="project" value="LOCAL" />
-      <updated>1736425481182</updated>
+      <updated>1736505905092</updated>
+      <workItem from="1736505906859" duration="148000" />
+      <workItem from="1736506064713" duration="358000" />
+      <workItem from="1736506429683" duration="1433000" />
+      <workItem from="1736507869368" duration="186000" />
+      <workItem from="1736508085711" duration="22299000" />
     </task>
-    <task id="LOCAL-00002" summary="Initialization">
-      <option name="closed" value="true" />
-      <created>1736426210845</created>
-      <option name="number" value="00002" />
-      <option name="presentableId" value="LOCAL-00002" />
-      <option name="project" value="LOCAL" />
-      <updated>1736426210845</updated>
-    </task>
-    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
     <option name="version" value="3" />
   </component>
   <component name="VcsManagerConfiguration">
-    <MESSAGE value="Initialization" />
-    <option name="LAST_COMMIT_MESSAGE" value="Initialization" />
+    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
   </component>
 </project>
\ No newline at end of file
Index: src/main/java/Map/Map.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Map/Map.java b/src/main/java/Map/Map.java
new file mode 100644
--- /dev/null	(date 1736603119963)
+++ b/src/main/java/Map/Map.java	(date 1736603119963)
@@ -0,0 +1,94 @@
+package Map;
+
+import PlayerMine.PlayerView;
+
+import javafx.geometry.Bounds;
+import javafx.scene.Scene;
+import javafx.scene.paint.Color;
+import javafx.scene.shape.Ellipse;
+import javafx.scene.shape.Rectangle;
+import javafx.scene.shape.Shape;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class Map {
+
+    private MapView view;
+
+    private final List<Shape> collisionShapes = new ArrayList<>(){};
+
+    public Map(Scene scene){
+        view = new MapView(scene);
+
+
+        //Cafeteria to Upper Engine Walls
+        createCollisionRectangle(2327, 537, 1553,469,0);
+
+        // Cafeteria Walls
+        createCollisionRectangle(3793, 341, 520,50,-45);
+        createCollisionRectangle(4217,170, 1175, 47,0 );
+        createCollisionRectangle(5251, 427, 780, 50 ,45);
+
+        // Cafeteria Tables
+        createCollisionCircle(4850,1258,500/2,378/2);
+        createCollisionCircle(5288, 769, 430/2, 336/2);
+
+        // Add for debug purposes
+        view.getChildren().addAll(collisionShapes);
+
+    }
+
+    // GETTERS
+    public MapView getView() { return view; }
+
+    public void onUpdate(double delta){
+    }
+
+    public boolean checkCollision(PlayerView playerView) {
+        Bounds playerBounds = playerView.getBoundsInParent();
+        Rectangle playerShape = new Rectangle(
+                playerBounds.getMinX(),
+                playerBounds.getMinY(),
+                playerBounds.getWidth(),
+                playerBounds.getHeight()
+        );
+
+        view.getChildren().add(playerShape);
+
+        for (Shape shape : collisionShapes) {
+            Shape intersection = Shape.intersect(playerShape, shape);
+
+            if(!intersection.getBoundsInLocal().isEmpty()) {
+                view.getChildren().remove(playerShape);
+                return true;
+            }
+
+            /*
+            if (playerView.getBoundsInParent().intersects(shape.getBoundsInParent())) {
+                return true;
+            }
+             */
+        }
+
+        view.getChildren().remove(playerShape);
+
+        return false;
+    }
+
+    private void createCollisionRectangle(int x, int y, int width, int height, int angle){
+        Rectangle wall = new Rectangle(x,y, width, height); // x, y, width, height
+        wall.setRotate(angle);
+        wall.setFill(Color.TRANSPARENT);
+        wall.setStroke(Color.RED); // For debugging purposes
+        this.collisionShapes.add(wall);
+    }
+
+    private void createCollisionCircle(int x, int y, int radiusX, int radiusY){
+        Ellipse ellipse = new Ellipse(x, y, radiusX, radiusY);
+        ellipse.setFill(Color.TRANSPARENT);
+        ellipse.setStroke(Color.RED); // For debugging purposes
+        this.collisionShapes.add(ellipse);
+    }
+
+}
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n    <option name=\"workspaceImportForciblyTurnedOn\" value=\"true\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_21\" default=\"true\" project-jdk-name=\"openjdk-21\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision c657429101a442ce09b46e1a37ec2733e4700cc7)
+++ b/.idea/misc.xml	(date 1736505922121)
@@ -1,14 +1,12 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
   <component name="MavenProjectsManager">
     <option name="originalFiles">
       <list>
         <option value="$PROJECT_DIR$/pom.xml" />
       </list>
     </option>
-    <option name="workspaceImportForciblyTurnedOn" value="true" />
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="openjdk-21" project-jdk-type="JavaSDK">
-    <output url="file://$PROJECT_DIR$/out" />
-  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="openjdk-21" project-jdk-type="JavaSDK" />
 </project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"VcsDirectoryMappings\">\r\n    <mapping directory=\"$PROJECT_DIR$\" vcs=\"Git\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
--- a/.idea/vcs.xml	(revision c657429101a442ce09b46e1a37ec2733e4700cc7)
+++ b/.idea/vcs.xml	(date 1736505922142)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="VcsDirectoryMappings">
-    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+    <mapping directory="" vcs="Git" />
   </component>
 </project>
\ No newline at end of file
Index: src/main/java/PlayerMine/Player.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/PlayerMine/Player.java b/src/main/java/PlayerMine/Player.java
new file mode 100644
--- /dev/null	(date 1736603119950)
+++ b/src/main/java/PlayerMine/Player.java	(date 1736603119950)
@@ -0,0 +1,83 @@
+package PlayerMine;
+
+import Map.Map;
+import javafx.scene.input.KeyCode;
+import javafx.scene.input.KeyEvent;
+import javafx.scene.paint.Color;
+
+public class Player {
+
+    private final int SPEED = 400; // pixels moved per second
+
+    private final PlayerView view;
+    private final double[] position;
+    private final double[] velocity;
+
+    // GETTERS
+    public PlayerView getView() { return view; }
+
+    public Player(double x, double y, Color color){
+        view = new PlayerView(x, y, color);
+
+        position = new double[]{x, y};
+        velocity = new double[]{0, 0};
+    }
+
+    public void onUpdate(double delta, Map map){
+
+        double newX = position[0] + velocity[0] * delta;
+        double newY = position[1] + velocity[1] * delta;
+        view.render(newX, newY);
+
+
+        // Check collision. Returns true if a collision takes place otherwise false.
+        if(!map.checkCollision(view)) {
+            // If no collision
+            position[0] = newX;
+            position[1] = newY;
+        }
+
+        // update PlayerView
+        view.render(position[0], position[1]);
+
+    }
+
+    public void handleKeyReleased(KeyEvent event) {
+
+
+        // EDIT VELOCITY
+        if (event.getCode() == KeyCode.W) {
+            this.velocity[1] = 0.0;
+        }
+        if (event.getCode() == KeyCode.A) {
+            this.velocity[0] = 0.0;
+        }
+        if (event.getCode() == KeyCode.S) {
+            this.velocity[1] = 0.0;
+        }
+        if (event.getCode() == KeyCode.D) {
+            this.velocity[0] = 0.0;
+        }
+
+    }
+    public void handleKeyPressed(KeyEvent event) {
+
+        // EDIT VELOCITY
+        if (event.getCode() == KeyCode.W) {
+            this.velocity[1] = -SPEED;
+        }
+        if (event.getCode() == KeyCode.A) {
+            this.velocity[0] = -SPEED;
+        }
+        if (event.getCode() == KeyCode.S) {
+            this.velocity[1] = SPEED;
+        }
+        if (event.getCode() == KeyCode.D) {
+            this.velocity[0] = SPEED;
+        }
+
+    }
+
+
+
+}
Index: src/main/java/PlayerMine/PlayerView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/PlayerMine/PlayerView.java b/src/main/java/PlayerMine/PlayerView.java
new file mode 100644
--- /dev/null	(date 1736603119970)
+++ b/src/main/java/PlayerMine/PlayerView.java	(date 1736603119970)
@@ -0,0 +1,21 @@
+package PlayerMine;
+
+import javafx.scene.paint.Color;
+import javafx.scene.shape.Circle;
+
+public class PlayerView extends Circle {
+
+    public PlayerView(double x, double y, Color color){
+        super();
+
+        this.setRadius(50);
+        this.setCenterX(x);
+        this.setCenterY(y);
+        this.setFill(color);
+    }
+
+    public void render(double x, double y){
+        this.setCenterX(x);
+        this.setCenterY(y);
+    }
+}
Index: src/main/java/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Main.java b/src/main/java/Main.java
new file mode 100644
--- /dev/null	(date 1736603119957)
+++ b/src/main/java/Main.java	(date 1736603119957)
@@ -0,0 +1,101 @@
+
+import Map.Map;
+import PlayerMine.Player;
+
+import javafx.animation.AnimationTimer;
+import javafx.scene.layout.Pane;
+import javafx.scene.paint.Color;
+import javafx.scene.shape.Circle;
+import javafx.scene.shape.Shape;
+
+import javafx.application.Application;
+import javafx.scene.input.*;
+import javafx.scene.Scene;
+import javafx.stage.Stage;
+
+import java.util.*;
+import java.util.List;
+
+
+public class Main extends Application {
+    public static void main(String[] args){
+        launch(args);
+    }
+
+    final private int WIDTH = 1280;
+    final private int HEIGHT = 720;
+
+    private List<Double> velocity = new ArrayList<>(Arrays.asList(0.0,0.0));
+
+    private List<Shape> collisionShapes;
+
+    final private Circle circle = new Circle();
+
+
+
+    private Map map;
+    private Player player;
+
+    private long previousFrameTime = 0;
+
+
+    @Override
+    public void start(Stage primaryStage){
+
+        Pane root = new Pane();
+
+        Scene scene = new Scene(root, WIDTH, HEIGHT);
+        scene.setFill(Color.BLACK);
+
+
+        this.map = new Map(scene);
+        this.player = new Player(4900, 1500, Color.BEIGE);
+
+        // Add player to map
+        this.map.getView().getChildren().add(this.player.getView());
+        // Add map to root
+        root.getChildren().add(this.map.getView());
+
+
+        // Key input callback
+        scene.addEventFilter(KeyEvent.KEY_PRESSED, this::handleKeyPressed);
+        scene.addEventFilter(KeyEvent.KEY_RELEASED, this::handleKeyReleased);
+
+        primaryStage.setTitle("Among Peers");
+        primaryStage.setScene(scene);
+        primaryStage.show();
+
+        // Start your game loop
+        AnimationTimer gameLoop = new AnimationTimer() {
+            @Override
+            public void handle(long currentFrameTime) {
+
+                if (previousFrameTime == 0){
+                    previousFrameTime = currentFrameTime;
+                    return;
+                }
+
+                long delta_nano = currentFrameTime - previousFrameTime;
+                previousFrameTime = currentFrameTime;
+
+                double delta = delta_nano/1000000000.0;
+
+                player.onUpdate(delta, map);
+                map.onUpdate(delta);
+
+                map.getView().render(player.getView());
+            }
+        };
+        gameLoop.start();
+
+    }
+
+    private void handleKeyReleased(KeyEvent event) {
+        player.handleKeyReleased(event);
+    }
+
+    private void handleKeyPressed(KeyEvent event) {
+        player.handleKeyPressed(event);
+    }
+
+}
